{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState;\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            /**\n   * Returns the current game board state.\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            /**\n   * Returns the current game score.\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   * @returns {string}\n   */ /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.resetBoard();\n                this.addRandomTile();\n                this.addRandomTile();\n                this.status = \"playing\";\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.start();\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.move(function(row) {\n                    return row;\n                }, function(row) {\n                    return row;\n                });\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.move(function(row) {\n                    return row.reverse();\n                }, function(row) {\n                    return row.reverse();\n                });\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.moveTranspose(function(row) {\n                    return row;\n                }, function(row) {\n                    return row;\n                });\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.moveTranspose(function(row) {\n                    return row.reverse();\n                }, function(row) {\n                    return row.reverse();\n                });\n            }\n        },\n        {\n            key: \"resetBoard\",\n            value: function resetBoard() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                this.board.forEach(function(row, i) {\n                    row.forEach(function(cell, j) {\n                        if (cell === 0) emptyCells.push([\n                            i,\n                            j\n                        ]);\n                    });\n                });\n                if (emptyCells.length > 0) {\n                    var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), x = _emptyCells_Math_floor[0], y = _emptyCells_Math_floor[1];\n                    this.board[x][y] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            /**\n   * Moves and merges the tiles.\n   * @param {Function} processRow\n   * @param {Function} unprocessRow\n   */ key: \"move\",\n            value: function move(processRow, unprocessRow) {\n                var _this = this;\n                var moved = false;\n                var newBoard = this.board.map(function(row, rowIndex) {\n                    var processedRow = processRow((0, $227c6742e0ff6f82$export$71511d61b312f219)(row));\n                    var mergedRow = _this.mergeRow(processedRow);\n                    if (!_this.rowsEqual(processedRow, mergedRow)) moved = true;\n                    return unprocessRow(mergedRow);\n                });\n                if (moved) {\n                    this.board = newBoard;\n                    this.addRandomTile();\n                }\n                this.updateStatus();\n            }\n        },\n        {\n            /**\n   * Moves tiles along a transposed version of the board.\n   * @param {Function} processRow\n   * @param {Function} unprocessRow\n   */ key: \"moveTranspose\",\n            value: function moveTranspose(processRow, unprocessRow) {\n                this.board = this.transpose(this.board);\n                this.move(processRow, unprocessRow);\n                this.board = this.transpose(this.board);\n            }\n        },\n        {\n            /**\n   * Merges a single row and returns the new row.\n   * @param {number[]} row\n   * @returns {number[]}\n   */ key: \"mergeRow\",\n            value: function mergeRow(row) {\n                var merged = [];\n                var skip = false;\n                for(var i = 0; i < row.length; i++){\n                    if (skip) {\n                        skip = false;\n                        continue;\n                    }\n                    if (row[i] !== 0 && row[i] === row[i + 1]) {\n                        merged.push(row[i] * 2);\n                        this.score += row[i] * 2;\n                        skip = true;\n                    } else if (row[i] !== 0) merged.push(row[i]);\n                }\n                while(merged.length < 4)merged.push(0);\n                return merged;\n            }\n        },\n        {\n            /**\n   * Transposes a 2D array (flips rows and columns).\n   * @param {number[][]} matrix\n   * @returns {number[][]}\n   */ key: \"transpose\",\n            value: function transpose(matrix) {\n                return matrix[0].map(function(_, colIndex) {\n                    return matrix.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            /**\n   * Checks if two rows are equal.\n   * @param {number[]} row1\n   * @param {number[]} row2\n   * @returns {boolean}\n   */ key: \"rowsEqual\",\n            value: function rowsEqual(row1, row2) {\n                return row1.every(function(value, index) {\n                    return value === row2[index];\n                });\n            }\n        },\n        {\n            /**\n   * Updates the game status (playing, win, lose).\n   */ key: \"updateStatus\",\n            value: function updateStatus() {\n                if (this.board.flat().includes(2048)) this.status = \"win\";\n                else if (!this.board.flat().includes(0) && !this.canMakeMove()) this.status = \"lose\";\n            }\n        },\n        {\n            /**\n   * Checks if any move is possible.\n   * @returns {boolean}\n   */ key: \"canMakeMove\",\n            value: function canMakeMove() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (i > 0 && this.board[i][j] === this.board[i - 1][j] || j > 0 && this.board[i][j] === this.board[i][j - 1]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nfunction $197cd56b15c33885$var$renderGame() {\n    var state = $197cd56b15c33885$var$game.getState();\n    var cells = document.querySelectorAll(\".field-cell\");\n    state.flat().forEach(function(cellValue, index) {\n        var cell = cells[index];\n        cell.textContent = cellValue || \"\";\n        cell.className = \"field-cell\";\n        if (cellValue) cell.classList.add(\"field-cell--\".concat(cellValue));\n    });\n    var scoreDisplay = document.querySelector(\".game-score\");\n    scoreDisplay.textContent = $197cd56b15c33885$var$game.getScore();\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") {\n        document.querySelector(\".message-win\").classList.remove(\"hidden\");\n        document.querySelector(\".message-lose\").classList.add(\"hidden\");\n    } else if ($197cd56b15c33885$var$game.getStatus() === \"lose\") {\n        document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n        document.querySelector(\".message-win\").classList.add(\"hidden\");\n    } else {\n        document.querySelector(\".message-win\").classList.add(\"hidden\");\n        document.querySelector(\".message-lose\").classList.add(\"hidden\");\n    }\n}\nfunction $197cd56b15c33885$var$startOrRestartGame() {\n    var startButton = document.querySelector(\".start\") || document.querySelector(\".restart\");\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") $197cd56b15c33885$var$game.start();\n    else $197cd56b15c33885$var$game.restart();\n    startButton.textContent = \"Restart\";\n    startButton.classList.remove(\"start\");\n    startButton.classList.add(\"restart\");\n    document.querySelector(\".message-start\").classList.add(\"hidden\");\n    $197cd56b15c33885$var$renderGame();\n}\nfunction $197cd56b15c33885$var$handleKeyPress(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    $197cd56b15c33885$var$renderGame();\n}\ndocument.querySelector(\".start\").addEventListener(\"click\", $197cd56b15c33885$var$startOrRestartGame);\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n$197cd56b15c33885$var$renderGame();\n\n})();\n//# sourceMappingURL=index.85e51d8b.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nfunction renderGame() {\n  const state = game.getState();\n  const cells = document.querySelectorAll('.field-cell');\n\n  state.flat().forEach((cellValue, index) => {\n    const cell = cells[index];\n\n    cell.textContent = cellValue || '';\n    cell.className = 'field-cell';\n\n    if (cellValue) {\n      cell.classList.add(`field-cell--${cellValue}`);\n    }\n  });\n\n  const scoreDisplay = document.querySelector('.game-score');\n\n  scoreDisplay.textContent = game.getScore();\n\n  if (game.getStatus() === 'win') {\n    document.querySelector('.message-win').classList.remove('hidden');\n    document.querySelector('.message-lose').classList.add('hidden');\n  } else if (game.getStatus() === 'lose') {\n    document.querySelector('.message-lose').classList.remove('hidden');\n    document.querySelector('.message-win').classList.add('hidden');\n  } else {\n    document.querySelector('.message-win').classList.add('hidden');\n    document.querySelector('.message-lose').classList.add('hidden');\n  }\n}\n\nfunction startOrRestartGame() {\n  const startButton =\n    document.querySelector('.start') || document.querySelector('.restart');\n\n  if (game.getStatus() !== 'playing') {\n    game.start();\n  } else {\n    game.restart();\n  }\n  startButton.textContent = 'Restart';\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n\n  document.querySelector('.message-start').classList.add('hidden');\n  renderGame();\n}\n\nfunction handleKeyPress(e) {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n  renderGame();\n}\n\ndocument.querySelector('.start').addEventListener('click', startOrRestartGame);\n\ndocument.addEventListener('keydown', handleKeyPress);\n\nrenderGame();\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   */\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState;\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  /**\n   * Returns the current game board state.\n   * @returns {number[][]}\n   */\n\n  getState() {\n    return this.board;\n  }\n\n  /**\n   * Returns the current game score.\n   * @returns {number}\n   */\n\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * Returns the current game status.\n   * @returns {string}\n   */\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.resetBoard();\n    this.addRandomTile();\n    this.addRandomTile();\n    this.status = 'playing';\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.start();\n  }\n\n  moveLeft() {\n    this.move(\n      (row) => row,\n      (row) => row,\n    );\n  }\n\n  moveRight() {\n    this.move(\n      (row) => row.reverse(),\n      (row) => row.reverse(),\n    );\n  }\n\n  moveUp() {\n    this.moveTranspose(\n      (row) => row,\n      (row) => row,\n    );\n  }\n\n  moveDown() {\n    this.moveTranspose(\n      (row) => row.reverse(),\n      (row) => row.reverse(),\n    );\n  }\n\n  resetBoard() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    this.board.forEach((row, i) => {\n      row.forEach((cell, j) => {\n        if (cell === 0) {\n          emptyCells.push([i, j]);\n        }\n      });\n    });\n\n    if (emptyCells.length > 0) {\n      const [x, y] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.board[x][y] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  /**\n   * Moves and merges the tiles.\n   * @param {Function} processRow\n   * @param {Function} unprocessRow\n   */\n\n  move(processRow, unprocessRow) {\n    let moved = false;\n    const newBoard = this.board.map((row, rowIndex) => {\n      const processedRow = processRow([...row]);\n      const mergedRow = this.mergeRow(processedRow);\n\n      if (!this.rowsEqual(processedRow, mergedRow)) {\n        moved = true;\n      }\n\n      return unprocessRow(mergedRow);\n    });\n\n    if (moved) {\n      this.board = newBoard;\n      this.addRandomTile();\n    }\n    this.updateStatus();\n  }\n\n  /**\n   * Moves tiles along a transposed version of the board.\n   * @param {Function} processRow\n   * @param {Function} unprocessRow\n   */\n\n  moveTranspose(processRow, unprocessRow) {\n    this.board = this.transpose(this.board);\n\n    this.move(processRow, unprocessRow);\n\n    this.board = this.transpose(this.board);\n  }\n\n  /**\n   * Merges a single row and returns the new row.\n   * @param {number[]} row\n   * @returns {number[]}\n   */\n  mergeRow(row) {\n    const merged = [];\n    let skip = false;\n\n    for (let i = 0; i < row.length; i++) {\n      if (skip) {\n        skip = false;\n        continue;\n      }\n\n      if (row[i] !== 0 && row[i] === row[i + 1]) {\n        merged.push(row[i] * 2);\n        this.score += row[i] * 2;\n        skip = true;\n      } else if (row[i] !== 0) {\n        merged.push(row[i]);\n      }\n    }\n\n    while (merged.length < 4) {\n      merged.push(0);\n    }\n\n    return merged;\n  }\n\n  /**\n   * Transposes a 2D array (flips rows and columns).\n   * @param {number[][]} matrix\n   * @returns {number[][]}\n   */\n\n  transpose(matrix) {\n    return matrix[0].map((_, colIndex) => matrix.map((row) => row[colIndex]));\n  }\n\n  /**\n   * Checks if two rows are equal.\n   * @param {number[]} row1\n   * @param {number[]} row2\n   * @returns {boolean}\n   */\n  rowsEqual(row1, row2) {\n    return row1.every((value, index) => value === row2[index]);\n  }\n\n  /**\n   * Updates the game status (playing, win, lose).\n   */\n  updateStatus() {\n    if (this.board.flat().includes(2048)) {\n      this.status = 'win';\n    } else if (!this.board.flat().includes(0) && !this.canMakeMove()) {\n      this.status = 'lose';\n    }\n  }\n\n  /**\n   * Checks if any move is possible.\n   * @returns {boolean}\n   */\n  canMakeMove() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (\n          (i > 0 && this.board[i][j] === this.board[i - 1][j]) ||\n          (j > 0 && this.board[i][j] === this.board[i][j - 1])\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","TypeError","board","score","status","key","value","resetBoard","addRandomTile","start","move","row","reverse","moveTranspose","emptyCells","forEach","cell","j","push","_emptyCells_Math_floor","isArray","Math","floor","random","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","err","x","y","processRow","unprocessRow","_this","moved","newBoard","map","rowIndex","processedRow","iter","mergedRow","mergeRow","rowsEqual","updateStatus","transpose","merged","skip","matrix","_","colIndex","row1","row2","every","index","flat","includes","canMakeMove","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$renderGame","state","getState","cells","document","querySelectorAll","cellValue","textContent","className","classList","add","concat","scoreDisplay","querySelector","getScore","getStatus","remove","addEventListener","startButton","restart","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.85e51d8b.js.map"}